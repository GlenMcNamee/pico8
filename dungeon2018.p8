pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
// init 

function _init()
 // set sprites
 floor = 1
 wall = 2
 stairs = 3
 upstairs = 4
 door = 5
 lockeddoor = 7
 fakefloor = 25
 // init varibles 
 gamestate = 0
 wait=0 
 anim = 1
 // map size
 xlimit = 64 // max 128
 ylimit = 32 // max 32
 // npc names
 name = {"mummy","troll","skeleton","yeti","monster","skull","eye","drop","frogman","duck","rat","cat"}
end
-->8
/// generate map

function _generate_map()
 room = 0
 mpx = {};mpy = {};mpw = {};mph = {}

 while (room < 64) do
  if _createroom(room) then 
   room += 1 
  else 
   maxrooms = room
   room = 64
  end
 end

 room = 0 
 while (room < maxrooms) do
  _expand(room); room += 1 
 end
 
 // place objects randomly  
 // around map
 _playobjs(10,33) // coins
 _playobjs(5,40) // chests
 _playobjs(1,46) // potions
 _playobjs(1,37) // food
 _playobjs(1,38) // food
 _playobjs(1,39) // food
 _playobjs(1,43) // book
 _playobjs(1,44) // book
 _playobjs(1,45) // book
 _playobjs(1,54+flr(rnd(3))) // clothes

 // shields
 chance = 33+ceil((3/10)*level)
 _playobjs(1,chance) 
 // armour 
 chance = 60+ceil((3/10)*level)
 _playobjs(1,chance) 
 // helmet 
 chance = 57+ceil((3/10)*level)
 _playobjs(1,chance) 
 // weapon
 chance = 47+ceil((6/10)*level)
 _playobjs(1,chance) 
  
 // create paths to rooms (also doors)
 room = 0 
 while (room < maxrooms) do
  _paths(room) ; room += 1   
 end
 
 // find rooms with only one 
	// door and lock that door
	room = 0 
	keysreq = 0
 while (room < maxrooms) do
  if _countdoors(room)==1 and room!=1 then 
   _lockdoor(room) 
   keysreq += 1
   // put exit in first locked room
   if keysreq == 1 then
    // ending postion
    x=2+mpx[room]+flr(rnd(mpw[room]-3))
    y=2+mpy[room]+flr(rnd(mph[room]-3))
    mset(x,y,stairs) 
   end
  end
  room += 1  
 end
 _playobjs(keysreq,32) // keys
 // starting postion
 x=2+mpx[1]+flr(rnd(mpw[1]-3))
 y=2+mpy[1]+flr(rnd(mph[1]-3))
 mset(x,y,upstairs)
 _placenpc()
end


function _createroom(room)
 // check room width and height
 clear = 0
 fail = 0
 while (clear == 0) do
  mpx[room] = flr(rnd(xlimit-5))
  mpy[room] = flr(rnd(ylimit-5))
  mph[room] = 5; mpw[room] = 5
  if _roomcheck(room)==true then 
   clear = 1 ; _fillroom(room)
  else
   fail += 1 ;
   if fail > 64 then clear = 2 end
  end 
 end
 if clear == 1 then 
  return true 
 else 
  return false 
 end
end

function _roomcheck(room)
 check = true
 for y=mpy[room]-1,1+mpy[room]+mph[room] do
  for x=mpx[room]-1,1+mpx[room]+mpw[room] do
   if mget(x,y)>1 then check = false end
  end
 end
 return check
end

function _countdoors(room)
 doors = 0
 for y=mpy[room],mpy[room]+mph[room] do
  for x=mpx[room],mpx[room]+mpw[room] do
   if mget(x,y) == door then
    doors+=1 
   end
  end
 end
 return doors
end

function _lockdoor(room)
 for y=mpy[room],mpy[room]+mph[room] do
  for x=mpx[room],mpx[room]+mpw[room] do
   if mget(x,y) == door then mset(x,y,lockeddoor) end
  end
 end
end

function _fillroom(room)
 for y=mpy[room],mpy[room]+mph[room] do
  for x=mpx[room],mpx[room]+mpw[room] do
   if x==mpx[room] or x==mpx[room]+mpw[room] or y==mpy[room] or y==mpy[room]+mph[room] then 
    mset(x,y,wall)
   else
    mset(x,y,floor)
   end      
  end
 end
end

function _expand(room)
 clear = 0
 while (clear < 2 ) do
  clear = 0
  if _checkexpand(room,2,0) then 
   mpw[room]+= 1 
  else 
   clear +=1 
  end
  if _checkexpand(room,0,2) then 
   mph[room]+= 1 
  else 
   clear +=1 
  end 

 end
 _fillroom(room)
end

function _checkexpand(room,x1,y1)
 if mph[room]+mpw[room]>16 then return false end
 check = true
 for y=mpy[room],mpy[room]+mph[room]+y1 do
  for x=mpx[room],mpx[room]+mpw[room]+x1 do
   if mget(x,y)>0 then 
    if y>mpy[room]+mph[room] or x>mpx[room]+mpw[room] then check = false end
   end
   if x>xlimit or y>ylimit or x<0 or y<0 then check = false end
  end
 end
 return check
end


function _paths(room)
 cxx = {1, 0, -1, 0} 
 cyy = {0, 1, 0, -1}
 cxy = {mpx[room],mpy[room],mpx[room]+mpw[room],mpy[room]+mph[room]}
 drr = flr(rnd(2))
  check = 0 
 for dr=0,1 do
 
  if abs(drr-dr) == 0 then 
   y=mpy[room]+mph[room]

   for x=mpx[room]+1, mpx[room]+mpw[room]-1 do
    if check != 1 then
     if mget(x-1,y)==wall and mget(x,y)==wall and mget(x+1,y)==wall then
      _drawpath(x,y)
     end
    end
   end
  else
   x=mpx[room]+mpw[room]
   for y=mpy[room]+1, mpy[room]+mph[room]-1 do
    if check != 1 then
     if mget(x,y-1)==wall and mget(x,y)==wall and mget(x,y+1)==wall then
      _drawpath2(x,y)
     end
    end
   end
  end
  
 end
end

function _drawpath(x1,y1)

 y2 = y1// + 1 
 check = 0
 while check == 0 do
   y2 += 1
  if mget(x1,y2)==wall and mget(x1,y2+1)==wall then
   check = 2
  end
  if mget(x1,y2)==wall and mget(x1,y2+1)==floor then
   check = 1 
  end
  if y2>62 then check=2 end
 end
 if check==1 then 
  mset(x1,y1,door)
  mset(x1,y2,door)
  for y3=y1+1, y2-1 do
   mset(x1,y3,floor)
  end
 end
 if check==1 then return true else return false end
end

function _drawpath2(x1,y1)
 x2 = x1// + 1 
 check = 0
 while check == 0 do
  x2 += 1
  if mget(x2,y1)==wall and mget(x2+1,y1)==wall then
   check = 2
  end
  if mget(x2,y1)==wall and mget(x2+1,y1)==floor then
   check = 1 
  end
  if x2>62 then check=2 end
 end
 if check==1 then 
  mset(x1,y1,door)
  mset(x2,y1,door)
  for x3=x1+1, x2-1 do
   mset(x3,y1,floor)
  end
 end
 if check==1 then return true else return false end
end

function _playobjs(nobj,obj)
 for no = 1,nobj do
  check = 0
  while check==0 do
   xo = flr(rnd(xlimit))
   yo = flr(rnd(ylimit))
   if mget(xo,yo)==floor and
    mget(xo+1,yo)==floor and
    mget(xo-1,yo)==floor and
    mget(xo,yo+1)==floor and
    mget(xo,yo-1)==floor 
    then
    check = 1 
    mset(xo,yo,obj)
   end
  end
 end
end
-->8

function _update()
 gamemode = flr(gamestate/10)
 if gamemode == 0 then _intro()  end
 if gamemode == 1 then _titlescreen()  end
 if gamemode == 2 then _setupgame()  end
 if gamemode == 3 then _setuplevel()  end   
 if gamemode == 4 then _gloop()  end
end

function _intro()
 wait += 1
 if btnp(4) or wait>70 then 
  gamestate = 10
  pal(7,7)  
 end
end

function _titlescreen()
 if gamestate == 10 then
  music(0); gamestate=11
 end
 if gamestate==11 and btnp(4) then 
  gamestate = 20
  music(-1, 300)
 end
end

function _setupgame()
 gamestate = 30
 // randomise player char
 chap=flr(rnd(3))
 // set up players stats
 cloths = 1+flr(rnd(3))
 weapon = 1
 keys = 0
 coins = 0
 potions = 0
 health = 10
 atk = 2
 basdef = 2
 maxhealth=10 
 // defence 
 armour = 0
 helmet = 0
 sheild = 0
 // gameset up. 
 level = 1
end

function _setuplevel()
 if gamestate== 30 then 
  _setupnpc()
  lastmess = 0
  _generate_map()
  gamestate = 31
 end
 if gamestate == 31  then 
  gamestate = 40
 end
end

function _clearmap()
 srand(time())
 for y=0,ylimit-1 do
  for x=0,xlimit-1 do
   mset(x,y,0)
  end
 end
 for room=0,maxrooms do
  del(mpx,mpx[room])
  del(mpy,mpx[room])
  del(mph,mpx[room])
  del(mpw,mpx[room])
 end
end

function _gloop()
 if gamestate == 40 then
  _ply()
  if playermoved == 1 then 
   _npc() 
   lastmess -= 1
  end
  if health<1 then 
   _mess("you died")
   gamestate = 42 
   wait = 0
  end
 end
 if gamestate == 41 then
	 _clearmap()
  level+=1
  srand(time())
  gamestate=30
	end
 if gamestate == 42 then
  if wait<250 then
   if wait%15 then _npc() end
   wait += 1
  else
 	 _clearmap()
   level+=1  
   gamestate=10
  end
	end	
end

function _tick_over()
 _npc() 
end

function _mess(mss,lm)
 if lm then lastmess = lm else lastmess = 3 end
 mess = mss
end
-->8
function _draw()
 cls(0)
 gamemode = flr(gamestate/10)
 if gamemode == 0 then _draw_intro() end 
 if gamemode == 1 then _draw_title() end
	if gamemode == 4 then _draw1() end
end 

function _draw_intro()
 if wait>000 and wait<005 then pal(7,0) end 
 if wait>005 and wait<010 then pal(7,5) end
 if wait>010 and wait<015 then pal(7,13) end
 if wait>015 and wait<020 then pal(7,6) end 
 if wait>020 and wait<025 then pal(7,7) end 
 if wait>050 and wait<055 then pal(7,6) end 
 if wait>055 and wait<060 then pal(7,13) end
 if wait>060 and wait<065 then pal(7,5) end
 if wait>065 and wait<070 then pal(7,0) end 
 spr(135,64-(3.5*8),64-8,8,2)
end

function _draw_title()
 spr(160,64-40,30,10,2)
 spr(128,64-(3.5*8),20,7,2)
 print("2018",90,44,13)
 print("by glen mcnamee",64-(15*2),64,7)
 print("for #7drl",64-(9*2),70)
 print("press ❎ to start",30,100)
end

function _draw1()
 for yy=1, 16 do 
  for xx=1, 16 do
   if xx+(x-8)<0 or xx+(x-8)>xlimit-1 or yy+(y-8)<0 or yy+(y-8)>ylimit-1 then
    // don't draw outside boundry
   else
    sprite = mget(xx+(x-8),yy+(y-8))
    am=0
    if xx<4 or xx>12 or yy<4 or yy>12 then
    newspr = 0
     if fget(sprite,1) then newspr = 17 end
     if fget(sprite,2) then newspr = 18 end
     if fget(sprite,3) then newspr = 16 end
     spr(newspr,xx*8,yy*8)
    else
     if fget(sprite,3) then spr(floor,xx*8,yy*8) end 
     if anim < 4 and sprite>79 and sprite<92 then
       spr(sprite+16,xx*8,yy*8) 
      else 
       spr(sprite,xx*8,yy*8) 
      end
    end
   end
  end
 end
 if health > 0 then _drawply() end
 _gui()
 anim += 1
 if anim > 8 then anim = 0 end
end

function _drawply()
 // draw chap
 spr(64+(chap),64,64)
 // draw clothes
 if cloths > 0 then
  sspr (16+(cloths*8),36,8,4,64,68)
 end
 // draw armour 
 if armour > 0 then
  spr(73+armour,64,64)
 end
 // draw weapons
 if weapon > 0 then
  sspr (52+(weapon*4),32,4,8,70,64) 
	end
 // draw helmet
 if helmet > 0 then
  sspr (16+(helmet*8),32,8,4,64,64)
 end
 // draw sheild
 if sheild > 0 then
  spr(76+sheild,62,64)
 end
end

function _gui()
 color(7)
 guib = 126
 guibl = 122
 guibr = 123
 heart = 124
 guitl = 125
 guitr = 127
 spr (guitl,0,0)
	for a=1,14 do
		spr (guib,a*8,0)
	end
	spr (guitr,120,0)
	-- dungeon
	spr (121,8,0)
	print (level,16,1)
	-- keys
	spr (32,24,0)
	print (keys,32,1)
 -- coins
	spr (33,40,0)
	print (coins,48,1)
	-- potions 
 spr (46,56,0)
	print (potions,64,1) 
	--atk
	spr (49,72,0)
	print (atk+weapon,80,1)
	--def
	def = basdef+(sheild*1)+(armour*1)+(helmet*1)
	spr (58,88,0)
	print (def,96,1)
	--heath
	if health<0 then health=0 end
	spr (heart,104,0)
	print (health,112,1)
	-- message
 spr (guibl,0,120)
	for a=1,14 do
		spr (guib,a*8,120)
	end
	spr (guibr,120,120)
	// print message
	if lastmess>0 then 
	 print(mess,8,121,7) 
	end
end
-->8
/// player stuff

function _ply()
 nx=x
 ny=y
 playermoved = 0
 if btnp(0) then nx = x - 1 end
	if btnp(1) then nx = x + 1 end
	if btnp(2) then ny = y - 1 end
	if btnp(3) then ny = y + 1 end
	// take potion
	if btnp(5) and potions > 0 then
	 health = maxhealth 
	 potions -= 1 ; sfx(4)
	end
 if nx!=x or ny!=y then
  playermoved = 1
  newpos =	mget(nx,ny)
 	if fget(newpos,0) == false then
 	 x=nx
 	 y=ny	 
 	end
 	// open door
 	if newpos == 5 then
 	 mset(nx,ny,6)
	  sfx(0)
 	 _mess("door opened")
 	end
 	// take coins from chest
 	if newpos == 42 then
 	 coins += 10
 	 mset(nx,ny,41)
 	 sfx(3)
 	 _mess("took coins from chest")
 	end
 	// open a chest 
 	if newpos == 40 then
 	 if flr(rnd(2))==0 then 
 	  mset(nx,ny,42)
 	 else
 	  mset(nx,ny,41)
 	 end
 	 _mess("opened chest")
 	end
 	// open locked door
 	if newpos == 7 and keys>0 then
 	 mset(nx,ny,6)
 	 keys -= 1
 	 	  sfx(0)
 	 playermoved = 1
 	 _mess("unlocked & opened door")
 	end
  if newpos >= 80 and mget(nx,ny) <= 88 then
 	 nme = _find_npc(nx,ny)
 	 if nme != false then
 	  att = flr(rnd(atk+weapon))
 	  npc_health[nme] -= att
 	  sfx(2)
 	  if npc_health[nme]<1 then
 	   _kill_npc(nme)
     _mess("you hit and kill the "..name[newpos-79]) 	  	   
 	  else
  	  if att == 0 then 
      _mess("you miss the "..name[newpos-79]) 	  	  
  	  else
  	   _mess("you hit the "..name[newpos-79].." for "..att) 	 
     end
    end
 	 end
  end
 end
 // pick up stuff
 if btnp(4) then 
  pickup = mget(x,y)
  playermoved = 1
 	if pickup == 46 then
 	 potions += 1
 	 mset(x,y,floor)
 	  	 sfx(3)
 	 _mess("picked up potion")
 	end
 	if pickup == 33 then
 	 coins += 1
 	 mset(x,y,floor)
 	  	 sfx(3)
 	 _mess("picked up coin") 	 
 	end
 	if pickup == 32 then
 	 keys += 1
 	 mset(x,y,floor)
 	  	 sfx(3)
 	 _mess("picked up key")
 	end
 	if pickup == 37 or
    	pickup == 38 or
    	pickup == 39 then
 	 health += 1
 	 if health>maxhealth then
 	  health=maxhealth
 	 end
 	 mset(x,y,floor)
 	  	 sfx(3)
 	 _mess("picked up food")
 	end
 	if pickup == 43 then
 	 maxhealth += 1
 	 mset(x,y,floor)
 	  	 sfx(3)
 	 _mess("picked up health book")
 	end
 	if pickup == 44 then
 	 basdef += 1
 	 mset(x,y,floor)
 	  	 sfx(3)
 	 _mess("picked up defence book")
 	end
 	if pickup == 45 then
 	 atk += 1
 	 mset(x,y,floor)
 	  	 sfx(3)
 	 _mess("picked up attack book")
 	end 
 	if pickup >= 54 and pickup <= 56 then
 	 cloths = pickup-53
 	 mset(x,y,floor)
 	  	 sfx(3)
 	 _mess("changed clothes")
 	end 
 	if pickup >= 61 and pickup <= 63 then
 	 armour = pickup-60
 	 mset(x,y,floor)
 	  	 sfx(3)
 	 _mess("changed armour")
 	end 
 	if pickup >= 34 and pickup <= 36 then
 	 sheild = pickup - 33
 	 mset(x,y,floor)
 	  	 sfx(3)
 	 _mess("picked up shield")
 	end 	
 	if pickup >= 58 and pickup <= 60 then
 	 helmet = pickup - 57
 	 mset(x,y,floor)
 	  	 sfx(3)
 	 _mess("picked up helmet")
 	end  
 	if pickup >= 48 and pickup <= 53 then
 	 weapon = pickup - 47
 	 mset(x,y,floor)
 	  	 sfx(3)
 	 _mess("picked up weapon")
 	end  	  		 	
 	// exit level if on stairs
 	if mget(x,y) == 3 then
 		gamestate=41
 		wait = 0
 	end	
 	// fight an npc 
	end
end	
	
	
-->8
// npc stuff

function _npc()
 for nnpc = 0,16 do
  type = mget(npcx[nnpc],npcy[nnpc])
  if npc_health[nnpc] > 0 then
   nx=npcx[nnpc] 
   ny=npcy[nnpc] 
   if npc_mode[nnpc] == 0 then
    dir = flr(rnd(4))
   end
   if dir==0 then nx -= 1 end
  	if dir==1 then nx += 1 end
  	if dir==2 then ny -= 1 end
  	if dir==3 then ny += 1 end 	
  	if nx==x and ny==y and health > 0 and type < 89 then
  	 att=flr(rnd(npc_att[nnpc]))-flr(rnd(def))
  	 if att <= 0 then
  	  _mess("the "..name[type-79].." misses" ) 	 
  	 else
 	   _mess("the "..name[type-79].." hits you for "..att) 	 
 	   health -= att
 	  end
	   sfx(1)	   
   else 	
   	if fget(mget(nx,ny),0) == false then
   	 mset(npcx[nnpc],npcy[nnpc],npcold[nnpc])
   	 npcx[nnpc] =nx
   	 npcy[nnpc] =ny   	 
   	 npcold[nnpc] = mget(nx,ny)
   	 mset(npcx[nnpc],npcy[nnpc],npc[nnpc])
   	end
   	if mget(nx,ny) == 5 then
   	 mset(nx,ny,6)
   	end
  	end
		end  
 end
end

function _kill_npc(nnpc)
 mset(npcx[nnpc],npcy[nnpc],npcold[nnpc])
 npcx[nnpc] = - 1
 npcy[nnpc] = -1
end

function _find_npc(xx,yy)
 for nnpc = 0,16 do
  if npcx[nnpc] == xx and npcy[nnpc] == yy then
   return nnpc
  end
 end
 return false
end

function _placenpc()
 for nnpc = 0,16 do
  if nnpc == 0 then
   type = 9+flr(rnd(3))
  else
   type = flr(rnd(ceil((9/10)*level)))
  end
  pnpc = 80+type
  check = 0
  while check==0 do
   xn = flr(rnd(xlimit))
   yn = flr(rnd(ylimit))
   if mget(xn,yn)==floor then
    check = 1 
    npcx[nnpc] = xn
    npcy[nnpc] = yn
    npc_att[nnpc] = 2+(type*1.5)+(level*1.5)
    npc[nnpc] = pnpc
    npcold[nnpc] = floor
    npc_health[nnpc] = 5+(type*2)+(level*2)
    npc_mode[nnpc] = 0 
    mset(xn,yn,pnpc)
   end
  end
 end
end

function _setupnpc()
 npcx = {}
 npcy = {}
 npcold = {}
 npc = {}
 npc_att = {}
 npc_health = {}
 npc_mode = {}
end
__gfx__
00000000111011101111111100000000111011106d1111d66d1111d66d5555d61111111100000000000000000000000000000000000000000000000000000000
00000000000000006cccd1760000000054000000d144441dd100001dd550055db33bd17b00000000000000000000000000000000000000000000000000000000
0000000010111011cdddd16c00000000545410111445544110000001505005053d3dd1b300000000000000000000000000000000000000000000000000000000
0000000000000000ddddd1cd5400000054545400145555411000000155555555ddddd1b300000000000000000000000000000000000000000000000000000000
00000000111011101111111154540000545454541455554110000001505005051111111100000000000000000000000000000000000000000000000000000000
0000000000000000dd1776cc5454540011545454144444411000000150500505dd177b3300000000000000000000000000000000000000000000000000000000
0000000010111011dd16cccd5454545411115454144445411000000155555555dd1b33b300000000000000000000000000000000000000000000000000000000
0000000000000000dd1cdddd5554545411111154144444411000000150500505dd1b3ddd00000000000000000000000000000000000000000000000000000000
00100010100010000000000000000000000000000044440000000000044444400000000000333300008888000000000004400000000000004444444404444440
00000000000000006555106600000000000000000444444040000004055555500000300003333330049888400000000005040000005555004554454405555550
1000100000100010511110650000000000000000054444504eeeee740549c4503003300033333333088898800060000005050000056666504445445405440040
0000000000000000111110510000000000000000045555405eeeee750549c450030300003b333333088888804464664405550000056556504444444405440044
001000101000100000000000000000000000000004444440544444d5055555500300003033bb3333000550004444444405454000056666500009400005450044
0000000000000000110666550000000000000000054444505444444505ca6e500300030003333330000550000555555005454400056566500009400005440044
1000100000100010110655510000000000000000045555405000000505ca6e500000030000044000000660000500005005054500056666500009400005440044
00000000000000001105111100000000000000000044440000000000055555500000000000044000000000000500005000050000000000000000000005555554
009aa900000000005555555055555550555555500000000003300000000006000000000000444440004444400cccccc008888880044444400088880000000000
00a00a00009aa900588eee50599aaa50533bbb500000444000330000000006600444440000455545004aa945cc111cc088e9e88044999440000880000c77cc00
009aa90009a99a905888ee505999aa505333bb50004444400088800000dddd00455545400045554500a9aa45ccccccc08888888044444440008e8800666777c0
000a00000a9aa9a0588eee50599aaa50533bbb500444440008ee8800066ddd0045554540045555400a9a9a40ccc11cc088eee8804499444008e7788077776660
000a90000a9aa9a05888ee505999aa505333bb500477740008e888006d66d000444444404444444044444440ccccccc0888888804444444008e778800cc77700
000a000009a99a90058ee500059aa500053bb500079999000888880066660000457545404575454045754540c5dddd008544440045666600088e788000766000
000aa900009aa9000055500000555000005550000997990000888000006000004555454045554540455545400cccccc0088888800444444000888800000c0000
00000000000000000000000000000000000000000099900000000000000000004444440044444400444444000000000000000000000000000000000000000000
00700000000006700000007000000000070407000007000000000000000000000000000000000000000000000000000000565000000000000000000000000000
0067000000006770000006706666670076666670077777000085580000c11c0000bddb00000000000000000005666500056665007d000d706d000d605d000d50
006700000006770000006670666667007666667000575000022882200cccccc00333b33000000000056665005676665056766650d7d7d7d0d6d6d6d0d5d5d5d0
006700009967700000066700046667007664667000747000025885200c1cc1c003db3d3000000000567666506a111a60aaaaaaa00d7d7d000d6d6d000d5d5d00
0999900004770000aa46000004406700070407000004000000588500071cc17000db3d00000000006a666a6061111160111a111007d7d70006d6d60005d5d500
00440000a4490000044a00000440070000040000000400000028820000cccc00003b33000000000061aaa1606a111a606a1a1a600d7d7d000d6d6d000d5d5d00
00440000aa09000044a000000440000000040000000400000028820000c77c00003b330000000000611111606a111a606a111a6007d7d70006d6d60005d5d500
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00aaa000005550000055500000555000005550000555550000000000000006006000666064660600000000000000000000000000000000000000000000000000
0afffa000544450005aaa50005555500055555000566660000000000000006006600066064666560000000000000000000000000000000000000000000000000
0ffcfc00044b4b000aa4a400050000000500500005600000000000000a0006000600046004066460000000000000000000000000000000000000000000000000
0fffff00044444000aaaaa00000000000000000005660600000000000a0006000600040004000400000000000000000000000000000000000000000055555500
ffffffff44444444aaaaaaaa088888000ccccc000bbbbb00055555500000000000000000000004000000000005d5d500555555500555000055555000533bb500
0fffff00044444000aaaaa00055565000555650005556500066656000000000000000000000004000666d600066656000666560005850000599950005333b500
0fffff00044444000aaaaa00088888000ccccc000bbbbb00055555000000000000000000000004000ddddd000d5d5d00055555000050000005950000053b5000
0f000f00040004000a000a0000000000000000000000000000000000000000000000000000000400000000000000000005000500000000000050000000550000
0077d00000333000007770000500050000ddd00000000000000000000000000000b8b80600700000000000000000000000000000000000000000000000000000
07dd77000333330007777700054444000ddddd000099990000eeee00000800000bbbbb0407170000000000000000000000000000000000000000000000000000
0d707000033b3b0007707000044141000dd1d1000977799004e4e4e0002980000b55550499770000000000000500050500000000000000000000000000000000
077ddd000333330000070700044414000ddddd00977777404e477e4e029888000bbbbb0400070000000000005000055500000000000000000000000000000000
7dd777d73333b333077770774444444555dd1d5597707090447cc74408585800b22222bb00777700033330005000045400000000000000000000000000000000
7d77dd003333b300700700005444440055dddd55044707405457745408888200beee5e0407767770a3a333000555555500000000000000000000000000000000
07dd77000333330000777000044444000ddddd000004440005454540002220000b222b0407776600073335550555555000000000000000000000000000000000
07000d00030003000700070005000500055055000000000000555500000000000b000b0400909000000000005050505000000000000000000000000000000000
00dd700000333000000000000500050000ddd0000099a90000eeee00000c000000bebe0600000000000000000000000000000000000000000000000000000000
0d77dd000333330000777000054444000ddddd000a7779a004e4e4e000d7c0000bbbbb0400700000000000005000050500000000000000000000000000000000
07d0d000033c3c0007777700044141000dd1d100a77777404e477e4e0d7ccc000b55550407170000000000005000055500000000000000000000000000000000
0dd7770003333300077070000444140055dddd5597707090447cc7440c5c5c000bbbbb0499770000000000005000045400000000000000000000000000000000
d77ddd7d3333c300077777774444144555dd1d5504970790545774540ccccd00b22222bb00777700033330000555555500000000000000000000000000000000
d7dd77003333333370070000544444000ddd1d00000494000545454000ddd000beee5e0407767770a3a333050555555000000000000000000000000000000000
0d77dd000333330000777000044444000ddddd000000000000555500000000000b222b0407776600073335505050505000000000000000000000000000000000
0d000700030003000700070005000500055055000000000000000000000000000b000b0400909000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000007770000066666000000000000001111110000008808800111111111111111111111111
0000000000000000000000000000000000000000000000000000000007777700066666660440000000011111111110008e888880111111111111111111111111
0000000000000000000000000000000000000000000000000000000007007000061161160550000000111111111111008e7e8880111111111111111111111111
00000000000000000000000000000000000000000000000000000000077707000615651604444000011111111111111088e88880011111111111111111111110
00000000000000000000000000000000000000000000000000000000007777000066566005555000011111111111111008888800011111111111111111111110
00000000000000000000000000000000000000000000000000000000007070000106660104444440111111111111111100888000001111111111111111111100
00000000000000000000000000000000000000000000000000000000000000000010001005555550111111111111111100080000000111111111111111111000
00000000000000000000000000000000000000000000000000000000000000000000000000000000111111111111111100000000000001111111111111100000
00000000000000000000000000000020000000000000000000000000770007700777777077000770077777007700077007777770077777700000000000000000
28888820028802888880002888200280288888800002000282000882777077707777777077700770777777707770777077777770777777700000000000000000
02888882008800288082000882002820088888800028200088200880777777707700000077770770770007707777777077000000770000000000000000000000
00880028208800088088200880028200088000200288820088820880777777707700000077777770777777707777777077777770777777700000000000000000
00880000888800088088820880282000088000002882882088282880770707707700000077077770770007707707077077000000770000000000000000000000
00880000888800088088288888820288088882028820288288028880770007707777777077007770770007707700077077777770777777700000000000000000
00880000888800088088028888800028088820288200028888002880770007700777777077000770770007707700077007777770077777700000000000000000
00880000888820288088008888820028088000028820288888000880000000000000000000000000000000000000000000000000000000000000000000000000
00880002880888888088000280282088288002882882882088000880000000000777777007777700770007700777777007777770000000000000000000000000
00880008800088888888002880028882088888880288820288002880000000007777777077777770777077707777777077777770000000000000000000000000
00880288200008088888028882002882088888880028202888028882000000007700000077000770777777707700000077000000000000000000000000000000
00888882000000000000000000000200000000820002000000000000000000007700777077777770777777707777777077777770000000000000000000000000
02888200000000000000000000000000000000000000000000000000000000007700077077000770770707707700000000000770000000000000000000000000
00280000000000000000000000000000000000000000000000000000000000007777777077000770770007707777777077777770000000000000000000000000
00080000000000000000000000000000000000000000000000000000000000000777777077000770770007700777777077777700000000000000000000000000
00080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3bb30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0bbbb30000000000000000000000000b30000000000000000000000b300000000000000000000000000000000000000000000000000000000000000000000000
0bbbbbb3bbbbbb0330003bb3bbbbbb0bbbbbbbbbbbbb30000000030bbbbbbbb3003003bbbbbb3000000000000000000000000000000000000000000000000000
0bb003bbbbbbbb00b3000bb0bbbbbb0bbbbbbbbbbbbbb30000003b0bbbbb0bb003b3003bbbbbb300000000000000000000000000000000000000000000000000
0bb0000bbb000300bb300bb0bb00030b30bb0bbbbb003b300003bb0b30bb0b303bbb300bb0003b30000000000000000000000000000000000000000000000000
0bb0003bbb000000bbb30bb0bb00000b00bb030bbb000bb0003bbb0300bb0303bb3bb30bb0000bb0000000000000000000000000000000000000000000000000
0bb03bb3bbbb3000bb3b3bb0bbbb300b00bb000bbbbbbb3003bbbb0000bb003bb303bb3bbbbbbb30000000000000000000000000000000000000000000000000
0bbbbbb0bbb30000bb03bbb0bbb30000b0bb000bbbbbb3003bb0bb0000bb03bb30003bbbbbbbb300000000000000000000000000000000000000000000000000
bbb30000bb00003bbb003bb0bb00003bb0bb000bb00bb003bb00bb0000bb003bb303bb3bb00bb000000000000000000000000000000000000000000000000000
3bb00000bb003bbbbb000bb0bb003bbb00bb000bb003bbbbb000bb0000bb0003bb3bb30bb003b300000000000000000000000000000000000000000000000000
0bb00000bbbbbbbbbb003bb0bbbbbbb303bb000bb000bbbbbbbbbbb303bb00003bbb300bbb003b30000000000000000000000000000000000000000000000000
03b30000bbbbbbbbb303bbbbbbbbbbb03bbbb03b3b003bbbbbbbbb303bbb300003b3003bbb0003bb000000000000000000000000000000000000000000000000
00bb000000000b300000000000000b300000000000000003b3000000000000000030000000000003000000000000000000000000000000000000000000000000
003b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888177771888888888888888888888888888888888888
88888ffffff882222228888888888888888888888888888888888888888888888888888888888888888228177118ff88ff888222822888888822888888228888
88888f8888f882888828888888888888888888888888888888888888888888888888888888888888882288811718ffffff888222822888882282888888222888
88888ffffff882888828888888888888888888888888888888888888888888888888888888888888882288822888f8ff8f888222888888228882888888288888
88888888888882888828888888888888888888888888888888888888888888888888888888888888882288822888ffffff888888222888228882888822288888
88888f8f8f88828888288888888888888888888888888888888888888888888888888888888888888822888228888ffff8888228222888882282888222288888
888888f8f8f8822222288888888888888888888888888888888888888888888888888888888888888882282288888f88f8888228222888888822888222888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550000000000000000000000000000000000000000005555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550000000000011111111112222222222333333333305555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550000000000011111111112222222222333333333305555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550000000000011111111112222222222333333333305555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550000000000011111111112222222222333333333305555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550000000000011111111112222222222333333333305555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550000000000011111111112222222222333333333305555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550000000000011111111112222222222333333333305555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550000000000011111111112222222222333333333305555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550000000000011111111112222222222333333333305555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550444444444455555555556666666666777777777705555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550444444444455555555556666666666777777777705555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550444444444455555555556666666666777777777705555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550444444444455555555556666666666777777777705555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550444444444455555555556666666666777777777705555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550444444444455555555556666666666777777777705555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550444444444455555555556666666666777777777705555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550444444444455555555556666666666777777777705555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550444444444455555555556666666666777777777705555555
5555555000000000000000000000000000000000000000000000000000000000000000000555555088888888889999999999aaaaaaaaaabbbbbbbbbb05555555
5555555000000000000000000000000000000000000000000000000000000000000000000555555088888888889999999999aaaaaaaaaabbbbbbbbbb05555555
5555555000000000000000000000000000000000000000000000000000000000000000000555555088888888889999999999aaaaaaaaaabbbbbbbbbb05555555
5555555000000000000000000000000000000000000000000000000000000000000000000555555088888888889999999999aaaaaaaaaabbbbbbbbbb05555555
5555555000000000000000000000000000000000000000000000000000000000000000000555555088888888889999999999aaaaaaaaaabbbbbbbbbb05555555
5555555000000000000000000000000000000000000000000000000000000000000000000555555088888888889999999999aaaaaaaaaabbbbbbbbbb05555555
5555555000000000000000000000000000000000000000000000000000000000000000000555555088888888889999999999aaaaaaaaaabbbbbbbbbb05555555
5555555000000000000000000000000000000000000000000000000000000000000000000555555088888888889999999999aaaaaaaaaabbbbbbbbbb05555555
5555555000000000000000000000000000000000000000000000000000000000000000000555555088888888889999999999aaaaaaaaa7777777777775555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550ccccccccccddddddddddeeeeeeeee7000000000075555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550ccccccccccddddddddddeeeeeeeee70ffffffff075555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550ccccccccccddddddddddeeeeeeeee70ffffffff075555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550ccccccccccddddddddddeeeeeeeee70ffffffff075555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550ccccccccccddddddddddeeeeeeeee70ffffffff075555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550ccccccccccddddddddddeeeeeeeee70ffffffff075555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550ccccccccccddddddddddeeeeeeeee70ffffffff075555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550ccccccccccddddddddddeeeeeeeee70ffffffff075555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550ccccccccccddddddddddeeeeeeeee7000000000075555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550000000000000000000000000000007777777777775555555
55555550000000000000000000000000000000000000000000000000000000000000000005555555555555555555555555555555555555555555555555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555555555555555555555555555555555555555555555555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555555555555555555555555555555555555555555555555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550000000555556667655555555555555555555555555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550000000555555666555555555555555555555555555555555
5555555000000000000000000000000000000000000000000000000000000000000000000555555000000055555556dddddddddddddddddddddddd5555555555
5555555000000000000000000000000000000000000000000000000000000000000000000555555000f0005555555655555555555555555555555d5555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550000000555555576666666d6666666d666666655555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550000000555555555555555555555555555555555555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550000000555555555555555555555555555555555555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555555555555555555555555555555555555555555555555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555555555555555555555555555555555555555555555555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555556665666555556667655555555555555555555555555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555556555556555555666555555555555555555555555555555555
5555555000000000000000000000000000000000000000000000000000000000000000000555555555555555555556dddddddddddddddddddddddd5555555555
555555500000000000000000000000000000000000000000000000000000000000000000055555565555565555555655555555555555555555555d5555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555556665666555555576666666d6666666d666666655555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555555555555555555555555555555555555555555555555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555555555555555555555555555555555555555555555555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555555555555555555555555555555555555555555555555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555555555555555555555555555555555555555555555555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555550005550005550005550005550005550005550005550005555
555555500000000000000000000000000000000000000000000000000000000000000000055555011d05011d05011d05011d05011d05011d05011d05011d0555
55555550000000000000000000000000000000000000000000000000000000000000000005555501110501110501110501110501110501110501110501110555
55555550000000000000000000000000000000000000000000000000000000000000000005555501110501110501110501110501110501110501110501110555
55555550000000000000000000000000000000000000000000000000000000000000000005555550005550005550005550005550005550005550005550005555
55555550000000000000000000000000000000000000000000000000000000000000000005555555555555555555555555555555555555555555555555555555
55555550000000000000000000000000000000000000000000000000000000000000000005555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555550000000055555555555555555555555555555555555555555555555555
55555555555555555555555557555555ddd5555d5d5d5d5555d5d55555555d555555550000000056666666666666555557777755555555555555555555555555
55555555555555555555555577755555ddd555555555555555d5d5d5555555d55555550000000056ddd6dd66dd66555577ddd775566666555666665556666655
55555555555555555555555777775555ddd5555d55555d5555d5d5d55555555d5555550000000056d6d66d666d66555577d7d77566dd666566ddd66566ddd665
55555555555555555555557777755555ddd555555555555555ddddd555ddddddd555550000000056d6d66d666d66555577d7d775666d66656666d665666dd665
555555555555555555555757775555ddddddd55d55555d55d5ddddd55d5ddddd5555550000000056d6d66d666d66555577ddd775666d666566d666656666d665
555555555555555555555755755555d55555d555555555555dddddd55d55ddd55555550000000056ddd6ddd6ddd655557777777566ddd66566ddd66566ddd665
555555555555555555555777555555ddddddd55d5d5d5d55555ddd555d555d555555550000000056666666666666555577777775666666656666666566666665
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555566666665ddddddd5ddddddd5ddddddd5
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000077777777770000000000000000000000000000000
00000000111111111111111100000000111111116d1111d66d1111d66d5555d60000000000000000000000070000000070000000000000000000000000000000
00000000111111116cccd1760000000054111111d144441dd100001dd550055d0000000000000000000000070000000070000000000000000000000000000000
0070070011111111cdddd16c00000000545411111445544110000001505005050000000000000000000000070000000070000000000000000000000000000000
0007700011111111ddddd1cd54000000545454111455554110000001555555550000000000000000000000070000000070000000000000000000000000000000
00077000111111111111111154540000545454541455554110000001505005050000000000000000000000070000000070000000000000000000000000000000
0070070011111111dd1776cc54545400545454541444444110000001505005050000000000000000000000070000000070000000000000000000000000000000
0000000011111111dd16cccd54545454555454541444454110000001555555550000000000000000000000070000000070000000000000000000000000000000
0000000011111111dd1cdddd55545454555554541444444110000001505005050000000000000000000000070000000070000000000000000000000000000000
00000000004440000000000000000000000000000000000000000000000000000000000000000000000000077777777770000000000000000000000000000000
0000000004fff4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000ff7f7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000fffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ffffffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000fffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000fffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000f000f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000077776500770077007650770056777600677777005677650076507700000000000000000
00000000000000000000000000000000000000000000000000000000077007600770077007760770067000000770000006700760077607700000000000000000
00000000000000000000000000000000000000000000000000000000077007700770077007770770077077600777700007700770077707700000000000000000
00000000000000000000000000000000000000000000000000000000077007700770077007707770077007700770000007700770077077700000000000000000
00000000000000000000000000000000000000000000000000000000077007600670076007706770067007700770000006700760077067700000000000000000
00000000000000000000000000000000000000000000000000000000077776500567765007705670056777600677777005677650077056700000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000777765006777770076507700677777007777770077776500567765007777770056776500777765000000000
00000000000000000000000000000000000000000770076007700000077607700770000000077000077007600670076000077000067007600770076000000000
00000000000000000000000000000000000000000777765007777000077707700777700000077000077776500777777000077000077007700777765000000000
00000000000000000000000000000000000000000770000007700000077077700770000000077000077007600770077000077000077007700770076000000000
00000000000000000000000000000000000000000770000007700000077067700770000000077000077007700770077000077000067007600770077000000000
00000000000000000000000000000000000000000770000006777770077056700677777000077000077007700770077000077000056776500770077000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888

__gff__
0102050202050405050000000000000000000000000303030203030303030303080808080808080809090908080808080808080808080808080008080808080800000000000000000000000000000000090909090909090909090909000000000101090101010100010000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000c3500c3500c3500c350183501835018350183501835018350183500c3500c3501835018350183500e3500e3500a3502f3500f350103500a35010350103500a350103500a350183500a3500a3500a350
00010000000001e3501c3501835016350153501335012350123501135011350113501035000000103500f3500f3500f3500f3501035011350133501535016350173501b3501e3502135022350243502635026350
000100003b7503115033750191502e75033750211501315035750247502175028750191500b1501b7501a7501d750177501975006150147501375013750107500b1500e15011150151500975019150077501f150
000100002f3502f3502f3502f350393502f3502f350363502d350343502c350313502a350293502e3502d3502d3502c35029350293502a350303502b350333502d350353502e3503735030350323503935034350
00010000000001a25024350243501d2501e2502025024450222501e0502425025250252503535029250260502b250354502d250280503a3502f2502e0503a4502f2502f2503c35030250302502f0503025030050
010f000018050000001b050000001a050000001605000000110500000013050000001605000000110501305018050000001b050000001a0500000016050000001105000000130500000016050000001105013050
010f00001855000000000000000000000000000000000000000000000000000000000000000000185501a5501b55000000000000000000000000001f55000000000000000000000000001d55000000185501a550
010f00001b550000001a550000000000000000185500000000000000001b5500000000000000001a550000001b5501a5501855000000000000000000000000001655000000185500000000000000000000000000
010f00001b5501a550165500000000000000000000000000000000000000000000000000000000165501855011550000000000000000000000000013550000000000000000000000000014550000001355000000
010f00000f5500000000000000000000000000000000000000000000000c5500000000000000000f5500000011550135501155000000000000000000000000000f55000000115500000000000000000000000000
010f00000c0430000000000000000c0430000000000000000c0430000000000000000c0430000000000000000c0430000000000000000c0430000000000000000c0430000000000000000c043000000000000000
010f00000c043000000000000000246150000000000000000c043000000000000000246150000024615000000c043000000000000000246150000000000000000c04300000000000000024615000002461524615
__music__
00 05400a44
00 05420b44
00 05060b44
00 05070b44
00 05080b44
00 05090b44
00 06490a44
00 07460a44
00 08420a44
02 09420a44

